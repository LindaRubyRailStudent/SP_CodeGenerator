<SqlScript Location="((1,1), (5,1))">
  <!--SELECT UnitsInStock,UnitPrice,ProductName FROM Products 
WHERE UnitsInStock >= 24
AND UnitPrice = 10
OR ProductName = "Tofu"
-->
  <Errors />
  <SqlBatch Location="((1,1), (5,1))">
    <!--SELECT UnitsInStock,UnitPrice,ProductName FROM Products 
WHERE UnitsInStock >= 24
AND UnitPrice = 10
OR ProductName = "Tofu"
-->
    <SqlSelectStatement Location="((1,1),(4,24))">
      <!--SELECT UnitsInStock,UnitPrice,ProductName FROM Products 
WHERE UnitsInStock >= 24
AND UnitPrice = 10
OR ProductName = "Tofu"-->
      <SqlSelectSpecification Location="((1,1),(4,24))">
        <!--SELECT UnitsInStock,UnitPrice,ProductName FROM Products 
WHERE UnitsInStock >= 24
AND UnitPrice = 10
OR ProductName = "Tofu"-->
        <SqlQuerySpecification Location="((1,1),(4,24))">
          <!--SELECT UnitsInStock,UnitPrice,ProductName FROM Products 
WHERE UnitsInStock >= 24
AND UnitPrice = 10
OR ProductName = "Tofu"-->
          <SqlSelectClause Location="((1,1),(1,42))" IsDistinct="False">
            <!--SELECT UnitsInStock,UnitPrice,ProductName-->
            <SqlSelectScalarExpression Location="((1,8),(1,20))">
              <!--UnitsInStock-->
              <SqlColumnRefExpression Location="((1,8),(1,20))" ColumnName="UnitsInStock" MultipartIdentifier="UnitsInStock">
                <!--UnitsInStock-->
                <SqlObjectIdentifier Location="((1,8),(1,20))" ObjectName="UnitsInStock">
                  <!--UnitsInStock-->
                  <SqlIdentifier Location="((1,8),(1,20))" Value="UnitsInStock">
                    <!--UnitsInStock-->
                  </SqlIdentifier>
                </SqlObjectIdentifier>
              </SqlColumnRefExpression>
            </SqlSelectScalarExpression>
            <SqlSelectScalarExpression Location="((1,21),(1,30))">
              <!--UnitPrice-->
              <SqlColumnRefExpression Location="((1,21),(1,30))" ColumnName="UnitPrice" MultipartIdentifier="UnitPrice">
                <!--UnitPrice-->
                <SqlObjectIdentifier Location="((1,21),(1,30))" ObjectName="UnitPrice">
                  <!--UnitPrice-->
                  <SqlIdentifier Location="((1,21),(1,30))" Value="UnitPrice">
                    <!--UnitPrice-->
                  </SqlIdentifier>
                </SqlObjectIdentifier>
              </SqlColumnRefExpression>
            </SqlSelectScalarExpression>
            <SqlSelectScalarExpression Location="((1,31),(1,42))">
              <!--ProductName-->
              <SqlColumnRefExpression Location="((1,31),(1,42))" ColumnName="ProductName" MultipartIdentifier="ProductName">
                <!--ProductName-->
                <SqlObjectIdentifier Location="((1,31),(1,42))" ObjectName="ProductName">
                  <!--ProductName-->
                  <SqlIdentifier Location="((1,31),(1,42))" Value="ProductName">
                    <!--ProductName-->
                  </SqlIdentifier>
                </SqlObjectIdentifier>
              </SqlColumnRefExpression>
            </SqlSelectScalarExpression>
          </SqlSelectClause>
          <SqlFromClause Location="((1,43),(1,56))">
            <!--FROM Products-->
            <SqlTableRefExpression Location="((1,48),(1,56))" ObjectIdentifier="Products">
              <!--Products-->
              <SqlObjectIdentifier Location="((1,48),(1,56))" ObjectName="Products">
                <!--Products-->
                <SqlIdentifier Location="((1,48),(1,56))" Value="Products">
                  <!--Products-->
                </SqlIdentifier>
              </SqlObjectIdentifier>
            </SqlTableRefExpression>
          </SqlFromClause>
          <SqlWhereClause Location="((2,1),(4,24))">
            <!--WHERE UnitsInStock >= 24
AND UnitPrice = 10
OR ProductName = "Tofu"-->
            <SqlBinaryBooleanExpression Location="((2,7),(4,24))" Operator="Or">
              <!--UnitsInStock >= 24
AND UnitPrice = 10
OR ProductName = "Tofu"-->
              <SqlBinaryBooleanExpression Location="((2,7),(3,19))" Operator="And">
                <!--UnitsInStock >= 24
AND UnitPrice = 10-->
                <SqlComparisonBooleanExpression Location="((2,7),(2,25))" ComparisonOperator="GreaterThanOrEqual">
                  <!--UnitsInStock >= 24-->
                  <SqlColumnRefExpression Location="((2,7),(2,19))" ColumnName="UnitsInStock" MultipartIdentifier="UnitsInStock">
                    <!--UnitsInStock-->
                    <SqlObjectIdentifier Location="((2,7),(2,19))" ObjectName="UnitsInStock">
                      <!--UnitsInStock-->
                      <SqlIdentifier Location="((2,7),(2,19))" Value="UnitsInStock">
                        <!--UnitsInStock-->
                      </SqlIdentifier>
                    </SqlObjectIdentifier>
                  </SqlColumnRefExpression>
                  <SqlLiteralExpression Location="((2,23),(2,25))" Value="24" Type="Integer">
                    <!--24-->
                  </SqlLiteralExpression>
                </SqlComparisonBooleanExpression>
                <SqlComparisonBooleanExpression Location="((3,5),(3,19))" ComparisonOperator="Equals">
                  <!--UnitPrice = 10-->
                  <SqlColumnRefExpression Location="((3,5),(3,14))" ColumnName="UnitPrice" MultipartIdentifier="UnitPrice">
                    <!--UnitPrice-->
                    <SqlObjectIdentifier Location="((3,5),(3,14))" ObjectName="UnitPrice">
                      <!--UnitPrice-->
                      <SqlIdentifier Location="((3,5),(3,14))" Value="UnitPrice">
                        <!--UnitPrice-->
                      </SqlIdentifier>
                    </SqlObjectIdentifier>
                  </SqlColumnRefExpression>
                  <SqlLiteralExpression Location="((3,17),(3,19))" Value="10" Type="Integer">
                    <!--10-->
                  </SqlLiteralExpression>
                </SqlComparisonBooleanExpression>
              </SqlBinaryBooleanExpression>
              <SqlComparisonBooleanExpression Location="((4,4),(4,24))" ComparisonOperator="Equals">
                <!--ProductName = "Tofu"-->
                <SqlColumnRefExpression Location="((4,4),(4,15))" ColumnName="ProductName" MultipartIdentifier="ProductName">
                  <!--ProductName-->
                  <SqlObjectIdentifier Location="((4,4),(4,15))" ObjectName="ProductName">
                    <!--ProductName-->
                    <SqlIdentifier Location="((4,4),(4,15))" Value="ProductName">
                      <!--ProductName-->
                    </SqlIdentifier>
                  </SqlObjectIdentifier>
                </SqlColumnRefExpression>
                <SqlColumnRefExpression Location="((4,18),(4,24))" ColumnName="Tofu" MultipartIdentifier="Tofu">
                  <!--"Tofu"-->
                  <SqlObjectIdentifier Location="((4,18),(4,24))" ObjectName="Tofu">
                    <!--"Tofu"-->
                    <SqlIdentifier Location="((4,18),(4,24))" Value="Tofu">
                      <!--"Tofu"-->
                    </SqlIdentifier>
                  </SqlObjectIdentifier>
                </SqlColumnRefExpression>
              </SqlComparisonBooleanExpression>
            </SqlBinaryBooleanExpression>
          </SqlWhereClause>
        </SqlQuerySpecification>
      </SqlSelectSpecification>
    </SqlSelectStatement>
    <Tokens>
      <Token location="((1,1), (1,7))" id="285" type="TOKEN_SELECT">SELECT</Token>
      <Token location="((1,7), (1,8))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((1,8), (1,20))" id="171" type="TOKEN_ID">UnitsInStock</Token>
      <Token location="((1,20), (1,21))" id="44" type=",">,</Token>
      <Token location="((1,21), (1,30))" id="171" type="TOKEN_ID">UnitPrice</Token>
      <Token location="((1,30), (1,31))" id="44" type=",">,</Token>
      <Token location="((1,31), (1,42))" id="171" type="TOKEN_ID">ProductName</Token>
      <Token location="((1,42), (1,43))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((1,43), (1,47))" id="242" type="TOKEN_FROM">FROM</Token>
      <Token location="((1,47), (1,48))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((1,48), (1,56))" id="171" type="TOKEN_ID">Products</Token>
      <Token location="((1,56), (2,1))" id="544" type="LEX_WHITE"> \r\n</Token>
      <Token location="((2,1), (2,6))" id="305" type="TOKEN_WHERE">WHERE</Token>
      <Token location="((2,6), (2,7))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((2,7), (2,19))" id="171" type="TOKEN_ID">UnitsInStock</Token>
      <Token location="((2,19), (2,20))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((2,20), (2,21))" id="62" type="&gt;">&gt;</Token>
      <Token location="((2,21), (2,22))" id="61" type="=">=</Token>
      <Token location="((2,22), (2,23))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((2,23), (2,25))" id="182" type="TOKEN_INTEGER">24</Token>
      <Token location="((2,25), (3,1))" id="544" type="LEX_WHITE">\r\n</Token>
      <Token location="((3,1), (3,4))" id="136" type="TOKEN_AND">AND</Token>
      <Token location="((3,4), (3,5))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((3,5), (3,14))" id="171" type="TOKEN_ID">UnitPrice</Token>
      <Token location="((3,14), (3,15))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((3,15), (3,16))" id="61" type="=">=</Token>
      <Token location="((3,16), (3,17))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((3,17), (3,19))" id="182" type="TOKEN_INTEGER">10</Token>
      <Token location="((3,19), (4,1))" id="544" type="LEX_WHITE">\r\n</Token>
      <Token location="((4,1), (4,3))" id="135" type="TOKEN_OR">OR</Token>
      <Token location="((4,3), (4,4))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((4,4), (4,15))" id="171" type="TOKEN_ID">ProductName</Token>
      <Token location="((4,15), (4,16))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((4,16), (4,17))" id="61" type="=">=</Token>
      <Token location="((4,17), (4,18))" id="544" type="LEX_WHITE"> </Token>
      <Token location="((4,18), (4,24))" id="171" type="TOKEN_ID">"Tofu"</Token>
      <Token location="((4,24), (5,1))" id="544" type="LEX_WHITE">\r\n</Token>
    </Tokens>
  </SqlBatch>
</SqlScript>