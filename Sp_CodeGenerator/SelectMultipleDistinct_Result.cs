//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Sp_CodeGenerator
{
    public partial class SelectMultipleDistinct_Result : IEquatable<SelectMultipleDistinct_Result>
    {
        public string SalesPerson { get; set; }
        public string CompanyName { get; set; }
        public string FirstName { get; set; }

        public bool Equals(SelectMultipleDistinct_Result other)
        {
            if (other.CompanyName == null) return false;
            if (this.CompanyName == other.CompanyName &&
                this.FirstName == other.FirstName &&
                this.SalesPerson == other.SalesPerson) return true;
            else
                return false;
        }

        public override bool Equals(object obj)
        {
            if (obj == null) return false;
            try
            {
                SelectMultipleDistinct_Result mdresult = (SelectMultipleDistinct_Result)obj;
                if (mdresult.CompanyName == null)
                {
                    return false;
                }
                else return Equals(mdresult);
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine(ex.Message);
                return false;
            }
        }

        public override int GetHashCode()
        {
            return this.GetHashCode();
        }

        public static bool operator == (SelectMultipleDistinct_Result linq, SelectMultipleDistinct_Result ef)
        {
            if ((object)linq == null || ((object)ef) == null)
                return !Object.Equals(linq, ef);
            return linq.Equals(ef);
        }

        public static bool operator !=(SelectMultipleDistinct_Result linq, SelectMultipleDistinct_Result ef)
        {
            if (linq == null || ef == null)
                return !Object.Equals(linq, ef);
            return !(linq.Equals(ef));
        }
    }
    
}
